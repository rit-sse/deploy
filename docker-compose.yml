version: "3.3"

services:
  traefik:
    image: traefik:2.4.5
    container_name: traefik
    restart: always
    command:
      - "--providers.docker=true"
      - "--providers.file.directory=/traefik/conf"
      - "--providers.file.watch=true"
      - "--api"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http"
      - "--certificatesresolvers.letsencrypt.acme.email=tech@sse.rit.edu"
      - "--certificatesresolvers.letsencrypt.acme.storage=/traefik/acme.json"
      - "--accesslog=true"
      - "--accesslog.filepath=/traefik/access.log"
      - "--accesslog.format=json"
      - "--accesslog.fields.defaultmode=keep"
      - "--accesslog.fields.headers.defaultmode=keep"
      - "--log.level=INFO"
      - "--log.filePath=/traefik/traefik.log"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.compress.compress=true"
      - "traefik.http.middlewares.secure.headers.browserxssfilter=true"
      - "traefik.http.middlewares.secure.headers.contenttypenosniff=true"
      - "traefik.http.middlewares.secure.headers.featurepolicy=geolocation 'none'; midi 'none'; sync-xhr 'none'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; fullscreen 'self'; payment 'none'"
      - "traefik.http.middlewares.secure.headers.framedeny=true"
      - "traefik.http.middlewares.secure.headers.customframeoptionsvalue=SAMEORIGIN"
      - "traefik.http.middlewares.secure.headers.sslredirect=true"
      - "traefik.http.middlewares.secure.headers.referrerpolicy=strict-origin"
      - "traefik.http.middlewares.secure.headers.customresponseheaders.Server=GNU Netcat 0.7.1"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.tohttps.redirectscheme.scheme=https"
      - "traefik.http.middlewares.adminauth.basicauth.usersfile=/traefik/conf/admin.auth"
      - "traefik.http.routers.traefik.rule=Host(`traefik.rit-sse.dev`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.middlewares=adminauth,compress,secure"
      - "traefik.http.services.traefik.loadbalancer.passhostheader=true"
    ports:
      - "80:80"
      - "2222:2222"
      - "443:443"
    networks:
      - traefik
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: bind
        source: ./traefik
        target: /traefik/conf
        read_only: true
      - type: volume
        source: traefik
        target: /traefik

  onerepo:
    image: ritsse/onerepo:latest
    container_name: onerepo
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.onerepo.rule=Host(`rit-sse.dev`)"
      - "traefik.http.routers.onerepo.entrypoints=https"
      - "traefik.http.routers.onerepo.service=onerepo"
      - "traefik.http.routers.onerepo.tls=true"
      - "traefik.http.routers.onerepo.tls.certresolver=letsencrypt"
      - "traefik.http.routers.onerepo.middlewares=compress,secure"
      - "traefik.http.routers.onerepo-insecure.rule=Host(`rit-sse.dev`)"
      - "traefik.http.routers.onerepo-insecure.entrypoints=http"
      - "traefik.http.routers.onerepo-insecure.middlewares=tohttps"
      - "traefik.http.services.onerepo.loadbalancer.server.port=80"
    depends_on:
      - traefik
    networks:
      - traefik

  node-api:
    image: ritsse/node-api:latest
    container_name: node-api
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-api.rule=(Host(`rit-sse.dev`) && PathPrefix(`/api/v2`))"
      - "traefik.http.routers.node-api.entrypoints=https"
      - "traefik.http.routers.node-api.service=node-api"
      - "traefik.http.routers.node-api.tls=true"
      - "traefik.http.routers.node-api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.node-api.middlewares=compress,secure"
      - "traefik.http.routers.node-api-insecure.rule=(Host(`rit-sse.dev`) && PathPrefix(`/api/v2`))"
      - "traefik.http.routers.node-api-insecure.entrypoints=http"
      - "traefik.http.routers.node-api-insecure.middlewares=tohttps"
      - "traefik.http.services.node-api.loadbalancer.server.port=3000"
    environment:
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}"
      - "GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}"
      - "NODE_ENV=production"
      - "DB_HOST_OVERRIDE=postgres"
    depends_on:
      - traefik
    networks:
      - traefik

  postgres:
    image: postgres:13.2-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
    labels:
      - "traefik.enable=false"
    networks:
      - traefik
    volumes:
      - type: volume
        source: postgres
        target: /var/lib/postgresql/data

networks:
  traefik:
    name: traefik
    driver: bridge

volumes:
  traefik:
  postgres:
